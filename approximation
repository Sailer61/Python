import numpy as np
import matplotlib.pyplot as plt
def func(x):
    y=x**(1/2)+x
    return y
n=20
def approx(m):
    c=np.array([i for i in range(m)])
    data_x=np.array([i for i in range(n)])
    data_y=np.array([func(i) for i in data_x])
    a=np.array([0]*(m+1))
    b=np.array([[0]*(m+1)]*(m+1))
    for i in range(m+1):
        for j in range(n):
            a[i]+=((data_x[j]**i)*data_y[j])
    for i in range(m+1):
        for j in range(m+1):
            for k in range(n):
                b[i][j] += data_x[k]**(i+j)
    kf=np.array([0.0]*(m+1))
    det = np.linalg.det(b)
    for i in range(m+1):
        bi = b.copy()
        bi[:, i] = a
        det1 = np.linalg.det(bi)
        kf[i] = det1 / det  
    aprx = np.zeros(n)
    for i in range(n):
        for j in range(m+1):
            aprx[i] += kf[j]*data_x[i]**j    
    e = data_y - aprx
    e_max = max(e)
    e_min = np.sqrt(np.mean(e**2))
    return(e_max,data_x,data_y,aprx,e_min)
    
min_e_max=1
for m in range(1,5):
    if approx(m)[0]<min_e_max:
        min_e_max=approx(m)[0]
        m1=m
        
    print("Многочлен",m,"порядка дает e_max",approx(m)[0])
    if approx(m)[0]==0:break
print("Выбран многочлен",m1,"порядка")
    
print('e_max = ', approx(m1)[0] , 'e_min =', approx(m1)[4])
print('e_max = ', round(approx(m1)[0] * 100),'%', 'e_min =', round(approx(m1)[4] * 100),'%')        
x=np.linspace(approx(m1)[1].min(),approx(m1)[1].max())
plt.plot(approx(m1)[1],approx(m1)[3],color="black")
plt.plot(approx(m1)[1],approx(m1)[2],"o",color="red")
plt.legend(['Approx','Function'], loc=2)
plt.show
